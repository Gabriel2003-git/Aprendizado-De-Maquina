{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP3HDTblg2D/cVsfPhLO/XE",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Gabriel2003-git/Aprendizado-De-Maquina/blob/main/DeveresDeCasa/Dever-01\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NByuiRe8kJeW"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "from datetime import datetime\n",
        "\n",
        "# Passo 1: Criando o arquivo CSV com 5 entradas\n",
        "dados = [\n",
        "    [\"Pablo Coelho\", \"01/26/1974\", \"2025/02/17\", \"20:30\"],\n",
        "    [\"Mariana Ferreira\", \"26/04/1995\", \"2025/02/17\", \"20:31\"],\n",
        "    [\"Carlos Silva\", \"15/08/1980\", \"2025/02/18\", \"09:15\"],\n",
        "    [\"Fernanda Costa\", \"03/12/1990\", \"2025/02/18\", \"14:20\"],\n",
        "    [\"João Oliveira\", \"21/09/1985\", \"2025/02/19\", \"18:45\"]\n",
        "]\n",
        "\n",
        "# Definindo o nome das colunas\n",
        "colunas = [\"nome\", \"dataNasc\", \"dataCadastrado\", \"horaCadastro\"]\n",
        "\n",
        "# Criando o DataFrame\n",
        "df = pd.DataFrame(dados, columns=colunas)\n",
        "\n",
        "# Salvando o DataFrame em um arquivo CSV\n",
        "arquivo_csv = '/content/registro_pessoas.csv'\n",
        "df.to_csv(arquivo_csv, index=False)\n",
        "\n",
        "# Passo 2: Lendo o arquivo CSV\n",
        "df_lido = pd.read_csv(arquivo_csv)\n",
        "\n",
        "# Função para exibir o registro no formato desejado\n",
        "def exibir_registro(numero_registro):\n",
        "    # Verificando se o número de registro está dentro do intervalo\n",
        "    if numero_registro < 1 or numero_registro > len(df_lido):\n",
        "        print(\"Número de registro inválido.\")\n",
        "        return\n",
        "\n",
        "    # Pegando o registro\n",
        "    registro = df_lido.iloc[numero_registro - 1]\n",
        "\n",
        "    # Convertendo as datas para o formato brasileiro\n",
        "    data_nasc = datetime.strptime(registro[\"dataNasc\"], \"%m/%d/%Y\").strftime(\"%d/%m/%Y\")\n",
        "    data_cadastro = datetime.strptime(registro[\"dataCadastrado\"], \"%Y/%m/%d\").strftime(\"%d/%m/%Y\")\n",
        "    hora_cadastro = registro[\"horaCadastro\"]\n",
        "\n",
        "    # Exibindo o registro formatado\n",
        "    print(f\"Registro {numero_registro}: Nome: {registro['nome']}; Data de nascimento: {data_nasc}; Data de cadastro: {data_cadastro} as {hora_cadastro} horas\")\n",
        "\n",
        "# Passo 3: Solicitando o número do registro para exibição\n",
        "numero_registro = int(input(\"Digite o número do registro que deseja exibir: \"))\n",
        "exibir_registro(numero_registro)\n"
      ]
    }
  ]
}